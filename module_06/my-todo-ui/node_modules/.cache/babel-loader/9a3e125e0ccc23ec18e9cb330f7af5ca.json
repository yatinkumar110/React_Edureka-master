{"ast":null,"code":"var _jsxFileName = \"D:\\\\EDUREKA_REACTJS\\\\React_Edureka-master\\\\React_Edureka-master\\\\module_06\\\\my-todo-ui\\\\src\\\\components\\\\todo\\\\TodoForm.jsx\";\nimport React, { Component, Fragment } from 'react';\nimport { Form, FormGroup, Input, Label, Button, Alert } from 'reactstrap';\n\nclass TodoForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: '',\n      description: '',\n      titleError: ''\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        //dynamic key\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const _this$state = this.state,\n            title = _this$state.title,\n            description = _this$state.description;\n\n      if (title === '') {\n        this.setState({\n          titleError: 'Title cannot be blank'\n        });\n      } else {\n        //this.props.add({ title, description })\n        //this.props.success('Task Added Successfully!')      \n        this.setState({\n          title: '',\n          description: '',\n          titleError: ''\n        });\n      }\n    };\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          title = _this$state2.title,\n          description = _this$state2.description,\n          titleError = _this$state2.titleError;\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Add Todo\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), titleError && React.createElement(Alert, {\n      id: \"titleError\",\n      color: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, titleError), React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Title\"), React.createElement(Input, {\n      id: \"title\",\n      value: title,\n      onChange: this.handleChange,\n      name: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Description\"), React.createElement(Input, {\n      type: \"textarea\",\n      value: description,\n      id: \"description\",\n      onChange: this.handleChange,\n      name: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })), React.createElement(Button, {\n      type: \"submit\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Add\")));\n  }\n\n}\n\nexport default TodoForm;","map":{"version":3,"sources":["D:\\EDUREKA_REACTJS\\React_Edureka-master\\React_Edureka-master\\module_06\\my-todo-ui\\src\\components\\todo\\TodoForm.jsx"],"names":["React","Component","Fragment","Form","FormGroup","Input","Label","Button","Alert","TodoForm","state","title","description","titleError","handleChange","e","setState","target","name","value","handleSubmit","preventDefault","render"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\n\nimport {Form, FormGroup, Input, Label, Button, Alert} from 'reactstrap'\n\nclass TodoForm extends Component{\n\n    state = {\n        title: '',\n        description: '',\n        titleError: ''\n    }\n\n    handleChange = (e) => {      \n        this.setState({\n          //dynamic key\n          [e.target.name]: e.target.value\n        })    \n    }\n\n    handleSubmit=(e)=> {\n        e.preventDefault()\n        \n        const { title, description } = this.state\n    \n        if(title === '') {\n          this.setState({\n            titleError: 'Title cannot be blank'\n          }) \n        } else {      \n          //this.props.add({ title, description })\n          //this.props.success('Task Added Successfully!')      \n    \n          this.setState({\n            title: '',\n            description: '',\n            titleError: ''\n          })\n        }\n      }\n    \n  \n    render(){\n        const { title, description, titleError } = this.state\n\n        return (\n            <Fragment>\n                <h5>Add Todo</h5>\n                <hr />\n        \n                 { titleError && \n                     <Alert id=\"titleError\" color=\"danger\">{titleError}</Alert> }\n        \n                <Form onSubmit={this.handleSubmit}>\n                    <FormGroup>\n                        <Label for=\"title\">Title</Label>\n                        <Input id=\"title\" value={title} onChange={this.handleChange} name=\"title\"/>\n                    </FormGroup>\n            \n                    <FormGroup>\n                        <Label for=\"description\">Description</Label>\n                        <Input type=\"textarea\" value={description} id=\"description\" \n                            onChange={this.handleChange} name=\"description\"/>\n                    </FormGroup>\n            \n                    <Button type=\"submit\" color=\"primary\">Add</Button>\n                </Form>\n            </Fragment>\n        )\n    }\n}\n\nexport default TodoForm"]},"metadata":{},"sourceType":"module"}